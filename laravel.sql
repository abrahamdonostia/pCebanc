-- phpMyAdmin SQL Dump
-- version 4.9.2
-- https://www.phpmyadmin.net/
--
-- Servidor: localhost
-- Tiempo de generación: 01-06-2020 a las 14:53:31
-- Versión del servidor: 10.3.21-MariaDB
-- Versión de PHP: 5.6.40

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Base de datos: `laravel`
--

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `articles`
--

CREATE TABLE `articles` (
  `id` int(11) NOT NULL,
  `title` varchar(100) NOT NULL,
  `description` varchar(1280) NOT NULL,
  `text` text NOT NULL,
  `category_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `created_at` date NOT NULL,
  `updated_at` date NOT NULL,
  `image` varchar(200) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Volcado de datos para la tabla `articles`
--

INSERT INTO `articles` (`id`, `title`, `description`, `text`, `category_id`, `user_id`, `created_at`, `updated_at`, `image`) VALUES
(1, 'Configure Synology NAS as Git Server', '', 'Configure Synology NAS as Git Server\r\n------------------------------------\r\n\r\nInstructions for setting up a git server on a Synology NAS with Diskstation. Specifically, I am using a DS414 with DSM 5.0. \r\n\r\n### Set Up User and Folder\r\n\r\n- Create user `gituser` via Diskstation interface (with File Station and WebDAV privilages)\r\n- Add new shared folder called `git` (located at `/volume1/git`) with read/write access for `gituser` and `admin`. This folder will hold all the repos.\r\n- Install Git Server package via Diskstation\r\n- Open Git Server and allow `gituser` permissions\r\n- Enable SSH access on Diskstation (Control Panel > Terminal & SNMP > Enable SSH Service)\r\n\r\n### Configure SSH Access\r\n\r\n- create `~/.ssh` folder for gituser on server\r\n\r\n```\r\nssh admin@diskstation.local\r\nmkdir /volume1/homes/gituser/.ssh\r\n```\r\n\r\n- copy public rsa key from local computer to gituser account on server\r\n\r\n```\r\nscp ~/.ssh/id_rsa.pub admin@diskstation.local:/volume1/homes/gituser/.ssh\r\n```\r\n\r\n- connect via SSH as `root` and rename `id_rsa.pub` to `authorized_keys` on NAS (or append if already exists, `cat id_rsa.pub >> authorized_keys`)\r\n\r\n```\r\nssh root@diskstation.local\r\nmv /volume1/homes/gituser/.ssh/id_rsa.pub /volume1/homes/gituser/.ssh/authorized_keys\r\n```\r\n\r\n- change permissions while logged in as root\r\n\r\n```\r\ncd /volume1/homes/gituser/\r\nchown -R gituser:users .ssh\r\nchmod 700 .ssh\r\nchmod 644 .ssh/authorized_keys\r\n```\r\n\r\n### Set Up New Repo on NAS\r\n\r\n- create bare repo as root\r\n \r\n```\r\nssh root@diskstation.local\r\ncd /volume1/git/\r\ngit --bare init <repo-name>.git\r\nchown -R gituser:users <repo-name>.git\r\ncd <repo-name>.git\r\ngit update-server-info\r\n```\r\n\r\nNOTE: I\'m not entirely sure if `git update-server-info` must be run for each repo or just initially. It seems to work without running this command, but I\'m suspcicious that it might cause problems later.\r\n\r\n### Add NAS as Remote for Local Repo\r\n\r\n- Clone repo from NAS\r\n\r\n```\r\ngit clone ssh://gituser@diskstation.local/volume1/git/<repo-name>.git\r\n```\r\n\r\n\r\n## References\r\n\r\nhttp://blog.osdev.org/git/2014/02/13/using-git-on-a-synology-nas.html\r\nhttp://stackoverflow.com/questions/20074692/set-up-git-on-a-nas-with-synologys-official-package\r\nhttp://www.heidilux.com/2014/02/setup-git-server-synology-nas/', 1, 5, '2020-05-15', '2020-05-15', ''),
(2, 'Reparar error al clonar Windows: error en archivo winload.efi', '', '<div class=\"item-page\" itemscope=\"\" itemtype=\"http://schema.org/Article\">\r\n	<meta itemprop=\"inLanguage\" content=\"es-ES\">\r\n				<div class=\"page-header\">\r\n		<h2 itemprop=\"name\">\r\n												<a href=\"/tutoriales/windows/204-reparar-error-en-windows-archivo-winload-efi\" itemprop=\"url\"> Reparar error al clonar Windows: error en archivo winload.efi</a>\r\n									</h2>\r\n							</div>\r\n					\r\n	\r\n			\r\n			<ul class=\"tags inline\">\r\n																	<li class=\"tag-124 tag-list0\" itemprop=\"keywords\">\r\n					<a href=\"/component/tags/tag/124-boot\" class=\"label label-info\">\r\n						boot					</a>\r\n				</li>\r\n																				<li class=\"tag-125 tag-list1\" itemprop=\"keywords\">\r\n					<a href=\"/component/tags/tag/125-grub\" class=\"label label-info\">\r\n						grub					</a>\r\n				</li>\r\n						</ul>\r\n	\r\n		\r\n								<span itemprop=\"articleBody\">\r\n		<p>Cuando clonamos Windows 10, salta un error en el arranque de este, si intentamos continuar, podemos ver que error es, concretamente un error en el archivo winload.efi ubicado en C:\\Windows\\system32.</p>\r\n<p>Para que al arrancar, esto no ocurra, deberemos arrancar Windows desde un USB, como si se fuera a instalar, cuando hayamos elegido el idioma y antes de darle a instalar, abajo saldrá un cartel que pone \"Reparar el equipo\", cuando lo hayamos seleccionado, podremos elegir varias opciones, nosotros seleccionaremos \"Opciones Avanzadas\", una vez seleccionado, buscamos la opción \"Símbolo del sistema\", entonces se nos abrirá un terminal y podremos continuar.</p>\r\n<p>Una vez en el terminal abriremos el gestor de discos con el comando</p>\r\n<pre class=\"bash\" style=\"font-family:monospace;\">diskpart</pre>\r\n<p>esperamos un poco a que nos muestre \"DISKPART&gt;\" y entonces listamos los volúmenes disponibles en los discos con</p>\r\n<pre class=\"bash\" style=\"font-family:monospace;\">list volume</pre>\r\n<p>Ahora deberemos buscar el volumen de 100MB que es el que se encarga de arrancar el sistema, cuando lo hayamos encontrado, debemos ejecutar el siguiente comando</p>\r\n<pre class=\"bash\" style=\"font-family:monospace;\"><span style=\"color: #000000; font-weight: bold;\">select</span> volume X</pre>\r\n<p>aqui hay que cambiar la X por el número de la particion.</p>\r\n<p>Ahora le asignaremos una letra para poderle copiar los archivos de boot con el comando (nosotros le hemos asignado la w):</p>\r\n<pre class=\"bash\" style=\"font-family:monospace;\">assign letter <span style=\"color: #c20cb9; font-weight: bold;\">w</span></pre>\r\n<p>Cuando le hayamos asignado una letra de volumen, salimos del gestor de discos con:</p>\r\n<pre class=\"bash\" style=\"font-family:monospace;\"><span style=\"color: #7a0874; font-weight: bold;\">exit</span></pre>\r\n<p>entonces ejecutamos el siguiente comando:</p>\r\n<pre class=\"bash\" style=\"font-family:monospace;\">bcdboot c:\\Windows <span style=\"color: #000000; font-weight: bold;\">/</span>s w: <span style=\"color: #000000; font-weight: bold;\">/</span>f UEFI</pre>\r\n<p>este comando copia los ficheros del boot a la partición que hemos asignado anteriormente</p>\r\n<p><strong>NOTA</strong>: Este comando es solo si Windows se ha clonado o instalado en UEFI, si no estás seguro de como se ha instalado, cambia \"UEFI\" por \"ALL\". Ten en cuenta que la letra de la unidad C:\\Windows puede cambiar siendo por ejemplo E:\\Windows, D:\\Windows, etc. (se muestra en list volume).</p>\r\n<p>A continuación reiniciamos el ordenador y arrancamos la primera opción que nos salga, y después iniciamos sesión con nuestro usuario.</p>\r\n<p>Y ya estará reparado Windows en otro ordenador</p>\r\n<p>Si ahora queremos reparar las multiples de arranque sigue los siguientes pasos.</p>\r\n<p>Abrimos MSConfig (Configuración del Sistema de Microsoft) pulsando la combinación de teclas \"Win+R\" una vez dentro, escribir</p>\r\n<pre class=\"bash\" style=\"font-family:monospace;\">msconfig</pre>\r\n<p>y pulsar Intro, cuando se nos abra la ventana, tenemos que buscar la pestaña \"Arranque\" o \"Boot\", una vez dentro, seleccionamos la opción que muestra \"(/WINDOWS)\" (suele ser la de abajo) y pulsamos \"Borrar\" o \"Delete\", también cambiaremos el \"Tiempo de espera\" o \"Timeout\" a 3 segundos.</p>\r\n<p>Una vez hecho esto, cuando volvamos a reiniciar, ya volverá a arrancar Windows como siempre.</p>\r\n<p><img src=\"/images/imagetuto/reparar_winload.efi_tutorial.png\" alt=\"reparar winload.efi tutorial\" data-pagespeed-url-hash=\"288866135\" onload=\"pagespeed.CriticalImages.checkImageForCriticality(this);\"></p>	</span>\r\n        <span style=\"display:none;\">\r\n            <time datetime=\"2018-04-10T10:51:40+02:00\" itemprop=\"dateModified\">\r\n                    2018-04-10T10:51:40+02:00            </time>\r\n            <time datetime=\"2017-08-14T09:46:48+02:00\" itemprop=\"datePublished\">\r\n                    2017-08-14T09:46:48+02:00            </time>\r\n            <img src=\"https://slimbook.es/templates/slimbook/img/logo1.jpg\" itemprop=\"image\" data-pagespeed-url-hash=\"3967574050\" onload=\"pagespeed.CriticalImages.checkImageForCriticality(this);\">\r\n            <span itemprop=\"headline\">Reparar error al clonar Windows: error en archivo winload.efi</span>  \r\n        </span>\r\n\r\n	\r\n						 </div>\r\n\r\n', 8, 5, '2020-05-15', '2020-05-15', ''),
(5, 'Articulo de prueba de subida desde form', 'DEscripcion de prueba al actualizar desde ajustes de usuario', '<p>This is some sample content.dsadasdsadsad sdadsadsadsadsadsad</p>', 1, 27, '2020-05-30', '2020-05-30', ''),
(6, 'Articulo de prueba de subida desde form', 'DEscripcion de prueba al actualizar desde ajustes de usuario', '<p>This is some sample content.dsadasdsadsad sdadsadsadsadsadsad</p>', 1, 27, '2020-05-30', '2020-05-30', ''),
(7, 'Articulo de prueba de subida desde form', 'DEscripcion de prueba al actualizar desde ajustes de usuario', '<p>This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.</p>', 1, 27, '2020-06-01', '2020-06-01', 'C:\\xampp\\tmp\\phpA5CB.tmp'),
(8, 'Articulo de prueba de subida desde form', 'DEscripcion de prueba al actualizar desde ajustes de usuario', '<p>This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.</p>', 1, 27, '2020-06-01', '2020-06-01', 'img/article/1591007082.png'),
(9, 'Reparar error al clonar Windows: error en archivo winload.efi', 'Cómo reparar error al clonar Windows: error en archivo winload.efi', '<p>Cuando clonamos Windows 10, salta un error en el arranque de este, si intentamos continuar, podemos ver que error es, concretamente un error en el archivo winload.efi ubicado en C:\\Windows\\system32.</p><p>Para que al arrancar, esto no ocurra, deberemos arrancar Windows desde un USB, como si se fuera a instalar, cuando hayamos elegido el idioma y antes de darle a instalar, abajo saldrá un cartel que pone \"Reparar el equipo\", cuando lo hayamos seleccionado, podremos elegir varias opciones, nosotros seleccionaremos \"Opciones Avanzadas\", una vez seleccionado, buscamos la opción \"Símbolo del sistema\", entonces se nos abrirá un terminal y podremos continuar.</p><p>Una vez en el terminal abriremos el gestor de discos con el comando</p><p>diskpart</p><p>esperamos un poco a que nos muestre \"DISKPART&gt;\" y entonces listamos los volúmenes disponibles en los discos con</p><p>list volume</p><p>Ahora deberemos buscar el volumen de 100MB que es el que se encarga de arrancar el sistema, cuando lo hayamos encontrado, debemos ejecutar el siguiente comando</p><p><strong>select</strong></p><p>&nbsp;volume X</p><p>aqui hay que cambiar la X por el número de la particion.</p><p>Ahora le asignaremos una letra para poderle copiar los archivos de boot con el comando (nosotros le hemos asignado la w):</p><p>assign letter&nbsp;</p><p><strong>w</strong></p><p>Cuando le hayamos asignado una letra de volumen, salimos del gestor de discos con:</p><p><strong>exit</strong></p><p>entonces ejecutamos el siguiente comando:</p><p>bcdboot c:\\Windows&nbsp;</p><p><strong>/</strong></p><p>s w:&nbsp;</p><p><strong>/</strong></p><p>f UEFI</p><p>este comando copia los ficheros del boot a la partición que hemos asignado anteriormente</p><p><strong>NOTA</strong>: Este comando es solo si Windows se ha clonado o instalado en UEFI, si no estás seguro de como se ha instalado, cambia \"UEFI\" por \"ALL\". Ten en cuenta que la letra de la unidad C:\\Windows puede cambiar siendo por ejemplo E:\\Windows, D:\\Windows, etc. (se muestra en list volume).</p><p>A continuación reiniciamos el ordenador y arrancamos la primera opción que nos salga, y después iniciamos sesión con nuestro usuario.</p><p>Y ya estará reparado Windows en otro ordenador</p><p>Si ahora queremos reparar las multiples de arranque sigue los siguientes pasos.</p><p>Abrimos MSConfig (Configuración del Sistema de Microsoft) pulsando la combinación de teclas \"Win+R\" una vez dentro, escribir</p><p>msconfig</p><p>y pulsar Intro, cuando se nos abra la ventana, tenemos que buscar la pestaña \"Arranque\" o \"Boot\", una vez dentro, seleccionamos la opción que muestra \"(/WINDOWS)\" (suele ser la de abajo) y pulsamos \"Borrar\" o \"Delete\", también cambiaremos el \"Tiempo de espera\" o \"Timeout\" a 3 segundos.</p><p>Una vez hecho esto, cuando volvamos a reiniciar, ya volverá a arrancar Windows como siempre.</p><figure class=\"image\"><img src=\"https://slimbook.es/images/imagetuto/reparar_winload.efi_tutorial.png\" alt=\"reparar winload.efi tutorial\"></figure>', 1, 27, '2020-06-01', '2020-06-01', 'img/article/1591007180.png'),
(10, 'Reparar error al clonar Windows: error en archivo winload.efi', 'Cómo reparar error al clonar Windows: error en archivo winload.efi', '<p>This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.</p>', 1, 27, '2020-06-01', '2020-06-01', 'img/article/1591007606.png'),
(11, 'Reparar error al clonar Windows: error en archivo winload.efi', 'Cómo reparar error al clonar Windows: error en archivo winload.efi', '<p>This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.</p>', 1, 27, '2020-06-01', '2020-06-01', 'img/article/1591007728.png'),
(12, 'Reparar error al clonar Windows: error en archivo winload.efi', 'Cómo reparar error al clonar Windows: error en archivo winload.efi', '<p>This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.This is some sample content.</p>', 1, 27, '2020-06-01', '2020-06-01', 'img/article/1591007996.png'),
(13, 'How to Convert Data from MySQL to JSON using PHP', 'In PHP, Converting Data from MySQL to JSON Format is one of the prominent tasks in Web Development. JSON has gained popularity over the years and is preferred over xml as data exchange format between web applications.', '<p>Using <a href=\"http://en.wikipedia.org/wiki/JSON\">json format</a> has its own advantages like being light weight, ability to store complex data structures in plain text and very human readable. Earlier we have discussed about <a href=\"http://www.kodingmadesimple.com/2014/12/how-to-insert-json-data-into-mysql-php.html\">converting json to mysql data</a> here. Now let us see how to convert mysql result set to json in php.</p><h2>Create MySQL Database</h2><p>&nbsp;</p><p>Here is the MySQL Database I\'m going to use as an example. Run these sql commands to create the Database.</p><p>&nbsp;</p><p>CREATE TABLE IF NOT EXISTS `tbl_employee` (\r\n &nbsp;`employee_id` int(4) NOT NULL AUTO_INCREMENT,\r\n &nbsp;`employee_name` varchar(60) NOT NULL,\r\n &nbsp;`designation` varchar(30) NOT NULL,\r\n &nbsp;`hired_date` date NOT NULL,\r\n &nbsp;`salary` int(10) NOT NULL,\r\n &nbsp;PRIMARY KEY (`employee_id`)\r\n) ENGINE=MyISAM &nbsp;DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;\r\n\r\nINSERT INTO `tbl_employee` (`employee_id`, `employee_name`, `designation`, `hired_date`, `salary`) VALUES\r\n(1, \'Steve\', \'VP\', \'2013-08-01\', 60000),\r\n(2, \'Robert\', \'Executive\', \'2014-10-09\', 20000),\r\n(3, \'Luci\', \'Manager\', \'2013-08-20\', 40000),\r\n(4, \'Joe\', \'Executive\', \'2013-06-01\', 25000),\r\n(5, \'Julia\', \'Trainee\', \'2014-10-01\', 10000);\r\n</p><h2>Convert MySQL to JSON String in PHP</h2><p>Here are the steps in converting mysql to json string with php.</p><h3>Step 1: Open MySQL Database Connection in PHP</h3><p>First establish connection to mysql database using mysqli_connect() function.</p><p>&lt;?php\r\n&nbsp;&nbsp;&nbsp;&nbsp;//open connection to mysql db\r\n&nbsp;&nbsp;&nbsp;&nbsp;$connection = mysqli_connect(\"hostname\",\"username\",\"password\",\"db_employee\") or die(\"Error \" . mysqli_error($connection));\r\n?&gt;\r\n</p><h3>Step 2: Fetch Data from MySQL Database</h3><p>After opening the connection, fetch the required table data from mysql db. Using the php function mysqli_query(), I\'m going to fetch all the rows from the table \'tbl_employee\'.</p><p>&lt;?php\r\n&nbsp;&nbsp;&nbsp;&nbsp;//fetch table rows from mysql db\r\n&nbsp;&nbsp;&nbsp;&nbsp;$sql = \"select * from tbl_employee\";\r\n&nbsp;&nbsp;&nbsp;&nbsp;$result = mysqli_query($connection, $sql) or die(\"Error in Selecting \" . mysqli_error($connection));\r\n?&gt;\r\n</p><h3>Step 3: Convert MySQL Result Set to PHP Array</h3><p>Next loop through the mysql result set we got from step-2 and convert it to php array.</p><p>&lt;?php\r\n&nbsp;&nbsp;&nbsp;&nbsp;//create an array\r\n&nbsp;&nbsp;&nbsp;&nbsp;$emparray = array();\r\n&nbsp;&nbsp;&nbsp;&nbsp;while($row =mysqli_fetch_assoc($result))\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$emparray[] = $row;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n?&gt;\r\n</p><h3>Step 4: Convert PHP Array to JSON String</h3><p>Next use the <a href=\"http://php.net/manual/en/function.json-encode.php\">PHP function json_encode()</a> to convert the php array to json string. Learn about <a href=\"http://www.kodingmadesimple.com/2014/04/php-json-decode-function-to-parse-json-object.html\">using php json_decode() function</a> here.</p><p>&lt;?php \r\n&nbsp;&nbsp;&nbsp;&nbsp;echo json_encode($emparray);\r\n?&gt;\r\n</p><p><i>That\'s it! We have successfully converted mysql to json using php. Here is the complete PHP code for it.</i></p><p>&lt;?php\r\n&nbsp;&nbsp;&nbsp;&nbsp;//open connection to mysql db\r\n&nbsp;&nbsp;&nbsp;&nbsp;$connection = mysqli_connect(\"hostname\",\"username\",\"password\",\"db_employee\") or die(\"Error \" . mysqli_error($connection));\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;//fetch table rows from mysql db\r\n&nbsp;&nbsp;&nbsp;&nbsp;$sql = \"select * from tbl_employee\";\r\n&nbsp;&nbsp;&nbsp;&nbsp;$result = mysqli_query($connection, $sql) or die(\"Error in Selecting \" . mysqli_error($connection));\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;//create an array\r\n&nbsp;&nbsp;&nbsp;&nbsp;$emparray = array();\r\n&nbsp;&nbsp;&nbsp;&nbsp;while($row =mysqli_fetch_assoc($result))\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$emparray[] = $row;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo json_encode($emparray);\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;//close the db connection\r\n&nbsp;&nbsp;&nbsp;&nbsp;mysqli_close($connection);\r\n?&gt;\r\n</p><p>Run the code and you get an output something like this.</p><figure class=\"image\"><img src=\"https://1.bp.blogspot.com/-5Lax5I_Jh44/VLLdPNTPIPI/AAAAAAAAAb8/YeQ-CBGMQNk/s1600/php-mysql-to-json-response.png\" alt=\"php-mysql-to-json-response\"></figure><h4>Convert MySQL to JSON File in PHP</h4><p>If you want to write the data from mysql to json file, use this piece of code at the end instead of \'echo\' statement.</p><p>&lt;?php\r\n&nbsp;&nbsp;&nbsp;&nbsp;//write to json file\r\n&nbsp;&nbsp;&nbsp;&nbsp;$fp = fopen(\'empdata.json\', \'w\');\r\n&nbsp;&nbsp;&nbsp;&nbsp;fwrite($fp, json_encode($emparray));\r\n&nbsp;&nbsp;&nbsp;&nbsp;fclose($fp);\r\n?&gt;</p>', 2, 27, '2020-06-01', '2020-06-01', 'img/article/1591009581.png'),
(14, 'Ionic 4 and Angular 6 Tutorial: Firebase Realtime CRUD Mobile App', 'A comprehensive step by step tutorial on build Ionic 4, Angular 6, Cordova and Firebase Realtime CRUD (Create, Read, Update, Delete) Mobile App', '<h2>&nbsp;</h2><p>Ionic 4 and Angular 6 Tutorial: build Firebase Realtime CRUD (Create, Read, Update, Delete) Mobile App. In this Ionic 4 and Angular 6 tutorial will show you how to access the Firebase Real-time Database. Not just accessing but run CRUD (Create, Read, Update, Delete) operation for populating Firebase Real-time Database.</p><h3><strong>Shortcut to the steps:</strong></h3><ul><li><a href=\"https://www.djamware.com/post/5b74e54f80aca74669894413/ionic-4-and-angular-6-tutorial-firebase-realtime-crud-mobile-app#setup-google-firebase\">Setup Google Firebase</a></li><li><a href=\"https://www.djamware.com/post/5b74e54f80aca74669894413/ionic-4-and-angular-6-tutorial-firebase-realtime-crud-mobile-app#new-ionic-angular-app\">Create a New Ionic Angular App</a></li><li><a href=\"https://www.djamware.com/post/5b74e54f80aca74669894413/ionic-4-and-angular-6-tutorial-firebase-realtime-crud-mobile-app#firebase-module\">Install and Configure the Firebase Module</a></li><li><a href=\"https://www.djamware.com/post/5b74e54f80aca74669894413/ionic-4-and-angular-6-tutorial-firebase-realtime-crud-mobile-app#list-bulletin-board\">Add List of Bulletin Board</a></li><li><a href=\"https://www.djamware.com/post/5b74e54f80aca74669894413/ionic-4-and-angular-6-tutorial-firebase-realtime-crud-mobile-app#add-bulletin-board\">Add Page for Create Bulletin Board Info</a></li><li><a href=\"https://www.djamware.com/post/5b74e54f80aca74669894413/ionic-4-and-angular-6-tutorial-firebase-realtime-crud-mobile-app#bulletin-board-details\">Add Page for Show Bulletin Board Info Detail</a></li><li><a href=\"https://www.djamware.com/post/5b74e54f80aca74669894413/ionic-4-and-angular-6-tutorial-firebase-realtime-crud-mobile-app#edit-bulletin-board\">Add Page for Edit Bulletin Board Info</a></li><li><a href=\"https://www.djamware.com/post/5b74e54f80aca74669894413/ionic-4-and-angular-6-tutorial-firebase-realtime-crud-mobile-app#run-ionic-angular-firebase\">Run and Test the Ionic 4, Angular 6, and Firebase Realtime App</a></li></ul><p>Previously, we have created a lot of Firebase tutorial with Ionic Framework before like below:</p><p>&nbsp;</p><p>What we build here just the Ionic 4, Angular 6 and Firebase CRUD app for Bulletin Board which just create information then show the list of information in the home page of the app. There also details of information, edit and delete the bulletin board information.&nbsp;The following tools, frameworks, and modules are required for this tutorial:</p><ol><li>Node.js</li><li>Ionic 4</li><li>Angular 6</li><li>Firebase NPM Module</li><li>Firebase/Google Account</li><li>Terminal or Node.js Command Line</li><li>IDE or Text Editor</li></ol><p>Before moving to the steps, make sure you have installed the latest Node.js and Ionic 4. To check it, type this command in the terminal or Node.js command line.</p><p>&nbsp;</p><p>node -v\r\nv8.11.1\r\nnpm -v\r\n6.2.0\r\nionic -v\r\nIonic CLI PRO 4.0.2\r\ncordova -v\r\n7.1.0</p><p>That\'s the last version when this tutorial was written. For update Node.js and it\'s `npm` download from Node.js https://nodejs.org and choose the recommended version. For Ionic 4, type this command.</p><p>sudo npm i -D -E ionic@latest\r\nsudo npm i -g cordova</p><h2><br><strong>Setup Firebase</strong></h2><p>Go to <a href=\"https://console.firebase.google.com/\">console.firebase.google.com</a> and log in using your Google account.</p><figure class=\"image\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/djamblog/article-151216170843.png\" alt=\"Ionic 4 and Angular 6 Tutorial: Firebase Realtime CRUD Mobile App - Firebase Welcome\"></figure><p>Click CREATE NEW PROJECT button, name it as you like (ours: BulletinBoard) and choose your country. Finally, click CREATE PROJECT button.</p><figure class=\"image\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/djamblog/article-140818175449.png\" alt=\"Ionic 4 and Angular 6 Tutorial: Firebase Realtime CRUD Mobile App - Firebase Project Overview\"></figure><p>Go to Develop menu then choose Database then scroll to `Or choose Real-time Database` then click `Create Database`.</p><figure class=\"image\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/djamblog/article-140818190144.png\" alt=\"Ionic 4 and Angular 6 Tutorial: Firebase Realtime CRUD Mobile App - Firebase Security Rules\"></figure><p>Choose `Start in test mode` then click `Enabled` button.</p><figure class=\"image\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/djamblog/article-140818190333.png\" alt=\"Ionic 4 and Angular 6 Tutorial: Firebase Realtime CRUD Mobile App - Firebase Real-time Database\"></figure><p>Now, the Firebase Real-time Database is ready to use.</p><p>&nbsp;</p><p>&nbsp;</p><h2><br><strong>Create a New Ionic Angular App</strong></h2><p>To create a new Ionic 4 / Angular 6 app, type this command.</p><p>ionic start ionic-firebase-crud blank --type=angular</p><p>You will see questions during the installation, just type `N` for now. Next, go to the newly created app folder.</p><p>cd ./ionic-firebase-crud</p><p>For sanitizing, run the app on the browser for the first time to make sure everything working properly.</p><p>ionic serve -l</p><p>Type `Y` if asked to install `@ionic/lab`. Now, the browser will open automatically then you will see this Ionic 4 Lab page.</p><figure class=\"image\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/djamblog/article-140818202831.png\" alt=\"Ionic 4 and Angular 6 Tutorial: Firebase Realtime CRUD Mobile App - Ionic 4 Serve\"></figure><p>&nbsp;</p><h2><br><strong>Install and Configure the Firebase Module</strong></h2><p>Firebase library ship with NPM module. For that, type this command to install the module.</p><p>npm install --save firebase</p><p>Next, register the Firebase module in the Ionic 4 / Angular 6 app by open and edit this file `src/app.component.ts` then add this import of Firebase.</p><p>import * as firebase from \'firebase\';</p><p>Declare a constant variable for holds Firebase setting before `@Component` that contain the configuration variable for accessing Firebase using apiKey, authDomain, databaseURL, projectId, storageBucket.</p><p>&nbsp;</p><p>&nbsp;</p><p>const config = {\r\n&nbsp; apiKey: \'YOUR_APIKEY\',\r\n&nbsp; authDomain: \'YOUR_AUTH_DOMAIN\',\r\n&nbsp; databaseURL: \'YOUR_DATABASE_URL\',\r\n&nbsp; projectId: \'YOUR_PROJECT_ID\',\r\n&nbsp; storageBucket: \'YOUR_STORAGE_BUCKET\',\r\n};</p><p>Add this line inside the `initializeApp` function for running the Firebase configuration.</p><p>initializeApp() {\r\n&nbsp; this.platform.ready().then(() =&gt; {\r\n&nbsp; &nbsp; this.statusBar.styleDefault();\r\n&nbsp; &nbsp; this.splashScreen.hide();\r\n&nbsp; });\r\n&nbsp; firebase.initializeApp(config);\r\n}</p><p>Now, Firebase database is ready to populate.</p><h2><br><strong>Add List of Bulletin Board</strong></h2><p>We will use existing Ionic 4 / Angular 6 home page for display the list of the bulletin board. Open and edit `src/app/home/home.page.ts` then add these&nbsp;imports of AlertController (@ionic/angular), Router, ActivatedRoute (@angular/router), and Firebase.</p><p>import { AlertController } from \'@ionic/angular\';\r\nimport { Router, ActivatedRoute } from \'@angular/router\';\r\nimport * as firebase from \'Firebase\';</p><p>Declare variables before the constructor for hold bulletin board list and referencing Firebase database.</p><p>&nbsp;</p><p>&nbsp;</p><p>infos = [];\r\nref = firebase.database().ref(\'infos/\');</p><p>Add this Firebase function to listening to any value changes from Firebase Database then extract the response to an array using the next function.</p><p>constructor(public router: Router, public loadingController: LoadingController) {\r\n&nbsp; this.ref.on(\'value\', resp =&gt; {\r\n&nbsp; &nbsp; this.infos = [];\r\n&nbsp; &nbsp; this.infos = snapshotToArray(resp);\r\n&nbsp; });\r\n}</p><p>Add this constant function below the Class block for converting Firebase response to an array.</p><p>export const snapshotToArray = snapshot =&gt; {\r\n&nbsp; &nbsp; let returnArr = [];\r\n\r\n&nbsp; &nbsp; snapshot.forEach(childSnapshot =&gt; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; let item = childSnapshot.val();\r\n&nbsp; &nbsp; &nbsp; &nbsp; item.key = childSnapshot.key;\r\n&nbsp; &nbsp; &nbsp; &nbsp; returnArr.push(item);\r\n&nbsp; &nbsp; });\r\n\r\n&nbsp; &nbsp; return returnArr;\r\n};</p><p>Add a function under the constructor for navigating to `add-info` page.</p><p>addInfo() {\r\n&nbsp; this.router.navigate([\'/add-info\']);\r\n}</p><p>Add a function for edit info data.</p><p>edit(key) {\r\n&nbsp; this.router.navigate([\'/edit/\'+key]);\r\n}</p><p>Add an asynchronous function for delete info data.</p><p>async delete(key) {\r\n&nbsp; const alert = await this.alertController.create({\r\n&nbsp; &nbsp; header: \'Confirm!\',\r\n&nbsp; &nbsp; message: \'Are you sure want to delete this info?\',\r\n&nbsp; &nbsp; buttons: [\r\n&nbsp; &nbsp; &nbsp; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; text: \'Cancel\',\r\n&nbsp; &nbsp; &nbsp; &nbsp; role: \'cancel\',\r\n&nbsp; &nbsp; &nbsp; &nbsp; cssClass: \'secondary\',\r\n&nbsp; &nbsp; &nbsp; &nbsp; handler: (blah) =&gt; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.log(\'cancel\');\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; }, {\r\n&nbsp; &nbsp; &nbsp; &nbsp; text: \'Okay\',\r\n&nbsp; &nbsp; &nbsp; &nbsp; handler: () =&gt; {\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; firebase.database().ref(\'infos/\'+key).remove();\r\n&nbsp; &nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; &nbsp; }\r\n&nbsp; &nbsp; ]\r\n&nbsp; });\r\n\r\n&nbsp; await alert.present();\r\n}</p><p>Finally, open and edit `src/app/home/home.page.html` then replace all tags with this &lt;ion-content&gt; that contain &lt;ion-list&gt; with an array of data.</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&lt;ion-header&gt;\r\n&nbsp; &lt;ion-toolbar&gt;\r\n&nbsp; &nbsp; &lt;ion-title&gt;\r\n&nbsp; &nbsp; &nbsp; Info List\r\n&nbsp; &nbsp; &lt;/ion-title&gt;\r\n&nbsp; &nbsp; &lt;ion-buttons slot=\"end\"&gt;\r\n&nbsp; &nbsp; &nbsp; &lt;ion-button routerLink=\"/create\"&gt;&lt;ion-icon name=\"add-circle\"&gt;&lt;/ion-icon&gt;&lt;/ion-button&gt;\r\n&nbsp; &nbsp; &lt;/ion-buttons&gt;\r\n&nbsp; &lt;/ion-toolbar&gt;\r\n&lt;/ion-header&gt;\r\n\r\n&lt;ion-content&gt;\r\n&nbsp; &lt;ion-list&gt;\r\n&nbsp; &nbsp; &lt;ion-item-sliding *ngFor=\"let info of infos\"&gt;\r\n&nbsp; &nbsp; &nbsp; &lt;ion-item detail lines=\"full\" routerLink=\"/detail/{{info.key}}\"&gt;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;ion-icon name=\"desktop\" slot=\"start\"&gt;&lt;/ion-icon&gt;\r\n&nbsp; &nbsp; &nbsp; &nbsp; {{info.info_title}}\r\n&nbsp; &nbsp; &nbsp; &lt;/ion-item&gt;\r\n&nbsp; &nbsp; &nbsp; &lt;ion-item-options side=\"end\"&gt;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;ion-item-option color=\"primary\" (click)=\"edit(info.key)\"&gt;EDIT&lt;/ion-item-option&gt;\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;ion-item-option color=\"danger\" (click)=\"delete(info.key)\"&gt;DELETE&lt;/ion-item-option&gt;\r\n&nbsp; &nbsp; &nbsp; &lt;/ion-item-options&gt;\r\n&nbsp; &nbsp; &lt;/ion-item-sliding&gt;\r\n&nbsp; &lt;/ion-list&gt;\r\n&lt;/ion-content&gt;</p><p>&nbsp;</p><h2><br><strong>Add Page for Create Bulletin Board Info</strong></h2><p>To create a new Angular 6 page, we use Ionic 4 CLI to generate it. Type this command for generating it.</p><p>ionic g page create</p><p>Next, open and edit `src/app/create.module.ts` then add or modify this import to add `ReactiveFormsModule`.</p><p>&nbsp;</p><p>&nbsp;</p><p>import { FormsModule, ReactiveFormsModule } from \'@angular/forms\';</p><p>Add this `ReactiveFormsModule` to `@NgModule` imports.</p><p>imports: [\r\n&nbsp; CommonModule,\r\n&nbsp; FormsModule,\r\n&nbsp; IonicModule,\r\n&nbsp; ReactiveFormsModule,\r\n&nbsp; RouterModule.forChild(routes)\r\n],</p><p>Next, open and edit `src/app/create/create.page.ts` then add these imports of ActivatedRoute, Router, FormControl, FormGroupDirective, FormBuilder, NgForm, Validators, and FormArray (Angular Forms).</p><p>import * as firebase from \'Firebase\';\r\nimport { ActivatedRoute, Router &nbsp;} from \'@angular/router\';\r\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators, FormArray } from \'@angular/forms\';</p><p>Inject that modules to the constructor params.</p><p>constructor(private route: ActivatedRoute,\r\n&nbsp; public router: Router,\r\n&nbsp; private formBuilder: FormBuilder) { }</p><p>Add these variables before the constructor.</p><p>ref = firebase.database().ref(\'infos/\');\r\ninfoForm: FormGroup;</p><p>Initialize the info FormBuilder inside the constructor body.</p><p>constructor(private route: ActivatedRoute,\r\n&nbsp; public router: Router,\r\n&nbsp; private formBuilder: FormBuilder) {\r\n&nbsp; &nbsp; this.infoForm = this.formBuilder.group({\r\n&nbsp; &nbsp; &nbsp; \'info_title\' : [null, Validators.required],\r\n&nbsp; &nbsp; &nbsp; \'info_description\' : [null, Validators.required]\r\n&nbsp; &nbsp; });\r\n&nbsp; }</p><p>Next, add the function to post the form data to the Firebase Real-time Database.</p><p>saveInfo() {\r\n&nbsp; let newInfo = firebase.database().ref(\'infos/\').push();\r\n&nbsp; newInfo.set(this.infoForm.value);\r\n&nbsp; this.router.navigate([\'/detail/\'+newInfo.key]);\r\n}</p><p>Finally, open and edit `src/app/create/create.page.html` then replace all HTML 5 tags with this.</p><p>&lt;ion-header&gt;\r\n&nbsp; &lt;ion-toolbar&gt;\r\n&nbsp; &nbsp; &lt;ion-buttons slot=\"start\"&gt;\r\n&nbsp; &nbsp; &nbsp; &lt;ion-back-button&gt;&lt;/ion-back-button&gt;\r\n&nbsp; &nbsp; &lt;/ion-buttons&gt;\r\n&nbsp; &nbsp; &lt;ion-title&gt;Create Info&lt;/ion-title&gt;\r\n&nbsp; &lt;/ion-toolbar&gt;\r\n&lt;/ion-header&gt;\r\n\r\n&lt;ion-content padding&gt;\r\n&nbsp; &lt;form [formGroup]=\"infoForm\"&gt;\r\n&nbsp; &nbsp; &lt;ion-item&gt;\r\n&nbsp; &nbsp; &nbsp; &lt;ion-label position=\"floating\"&gt;Info Title&lt;/ion-label&gt;\r\n&nbsp; &nbsp; &nbsp; &lt;ion-input type=\"text\" formControlName=\"info_title\"&gt;&lt;/ion-input&gt;\r\n&nbsp; &nbsp; &lt;/ion-item&gt;\r\n&nbsp; &nbsp; &lt;ion-item&gt;\r\n&nbsp; &nbsp; &nbsp; &lt;ion-label position=\"floating\"&gt;Info Description&lt;/ion-label&gt;\r\n&nbsp; &nbsp; &nbsp; &lt;ion-input type=\"text\" formControlName=\"info_description\"&gt;&lt;/ion-input&gt;\r\n&nbsp; &nbsp; &lt;/ion-item&gt;\r\n&nbsp; &nbsp; &lt;ion-button shape=\"round\" color=\"primary\" expand=\"block\" [disabled]=\"!infoForm.valid\" (click)=\"saveInfo()\"&gt;Save&lt;/ion-button&gt;\r\n&nbsp; &lt;/form&gt;\r\n&lt;/ion-content&gt;</p><h2><br><strong>Add Page for Show Bulletin Board Info Detail</strong></h2><p>Create a new Ionic 4 / Angular 6 page by type this command to generate it.</p><p>ionic g page detail</p><p>Open and edit `src/app/detail/detail.page.ts` then add these imports of Firebase, ActivatedRoute, and Router.</p><p>import * as firebase from \'Firebase\';\r\nimport { ActivatedRoute, Router &nbsp;} from \'@angular/router\';</p><p>Inject that module to the constructor.</p><p>constructor(private route: ActivatedRoute,\r\n&nbsp; public router: Router) { }</p><p>Declare a variable before the constructor.</p><p>info = {};</p><p>Load info data from Firebase Realtime Database to the body of the constructor.</p><p>constructor(private route: ActivatedRoute,\r\n&nbsp; public router: Router) {\r\n&nbsp; firebase.database().ref(\'infos/\'+this.route.snapshot.paramMap.get(\'key\')).on(\'value\', resp =&gt; {\r\n&nbsp; &nbsp; this.info = snapshotToObject(resp);\r\n&nbsp; });\r\n}</p><p>Create this class for converting Firebase Real-time Database response to the Angular 6 object.</p><p>export const snapshotToObject = snapshot =&gt; {\r\n&nbsp; let item = snapshot.val();\r\n&nbsp; item.key = snapshot.key;\r\n\r\n&nbsp; return item;\r\n}</p><p>Finally, open and edit `src/app/detail/detail.page.html` then replace all HTML tags with this.</p><p>&lt;ion-header&gt;\r\n&nbsp; &lt;ion-toolbar&gt;\r\n&nbsp; &nbsp; &lt;ion-buttons slot=\"start\"&gt;\r\n&nbsp; &nbsp; &nbsp; &lt;ion-back-button&gt;&lt;/ion-back-button&gt;\r\n&nbsp; &nbsp; &lt;/ion-buttons&gt;\r\n&nbsp; &nbsp; &lt;ion-title&gt;Info Details&lt;/ion-title&gt;\r\n&nbsp; &lt;/ion-toolbar&gt;\r\n&lt;/ion-header&gt;\r\n\r\n&lt;ion-content padding&gt;\r\n&nbsp; &lt;ion-card&gt;\r\n&nbsp; &nbsp; &lt;ion-card-content&gt;\r\n&nbsp; &nbsp; &nbsp; &lt;ion-card-title&gt;{{info.info_title}}&lt;/ion-card-title&gt;\r\n\r\n&nbsp; &nbsp; &nbsp; &lt;p&gt;{{info.info_description}}&lt;/p&gt;\r\n&nbsp; &nbsp; &lt;/ion-card-content&gt;\r\n&nbsp; &lt;/ion-card&gt;\r\n&lt;/ion-content&gt;</p><h2><br><strong>Add Page for Edit Bulletin Board Info</strong></h2><p>Create a new Ionic 4 / Angular 6 page by type this command for generating it.</p><p>ionic g page edit</p><p>Next, open and edit `src/app/edit.module.ts` then add or modify this import to add `ReactiveFormsModule`.</p><p>import { FormsModule, ReactiveFormsModule } from \'@angular/forms\';</p><p>Add this `ReactiveFormsModule` to `@NgModule` imports.</p><p>imports: [\r\n&nbsp; CommonModule,\r\n&nbsp; FormsModule,\r\n&nbsp; IonicModule,\r\n&nbsp; ReactiveFormsModule,\r\n&nbsp; RouterModule.forChild(routes)\r\n],</p><p>Open and edit `src/app/edit/edit.page.ts` then add these imports of the required Angular Router and Forms.</p><p>import * as firebase from \'Firebase\';\r\nimport { ActivatedRoute, Router &nbsp;} from \'@angular/router\';\r\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators, FormArray } from \'@angular/forms\';</p><p>Inject that module to the constructor.</p><p>constructor(private route: ActivatedRoute,\r\n&nbsp; public router: Router,\r\n&nbsp; private formBuilder: FormBuilder) { }</p><p>Declare a variable before the constructor.</p><p>ref = firebase.database().ref(\'infos/\');\r\ninfoForm: FormGroup;</p><p>Create a function for load info data based on the key that gets from params.</p><p>getInfo(key) {\r\n&nbsp; firebase.database().ref(\'infos/\'+key).on(\'value\', resp =&gt; {\r\n&nbsp; &nbsp; let info = snapshotToObject(resp);\r\n&nbsp; &nbsp; this.infoForm.controls[\'info_title\'].setValue(info.info_title);\r\n&nbsp; &nbsp; this.infoForm.controls[\'info_description\'].setValue(info.info_description);\r\n&nbsp; });\r\n}</p><p>Call that function after initializing the FormGroup to the body of the constructor.</p><p>constructor(private route: ActivatedRoute,\r\n&nbsp; public router: Router,\r\n&nbsp; private formBuilder: FormBuilder) {\r\n&nbsp; &nbsp; this.infoForm = this.formBuilder.group({\r\n&nbsp; &nbsp; &nbsp; \'info_title\' : [null, Validators.required],\r\n&nbsp; &nbsp; &nbsp; \'info_description\' : [null, Validators.required]\r\n&nbsp; &nbsp; });\r\n&nbsp; &nbsp; this.getInfo(this.route.snapshot.paramMap.get(\'key\'));\r\n&nbsp; }</p><p>Create this class for converting Firebase Real-time Database response to the Angular 6 object.</p><p>export const snapshotToObject = snapshot =&gt; {\r\n&nbsp; let item = snapshot.val();\r\n&nbsp; item.key = snapshot.key;\r\n\r\n&nbsp; return item;\r\n}</p><p>Add this function to update the data from the FormGroup to the Firebase Real-time Database.</p><p>updateInfo() {\r\n&nbsp; let newInfo = firebase.database().ref(\'infos/\'+this.route.snapshot.paramMap.get(\'key\')).update(this.infoForm.value);\r\n&nbsp; this.router.navigate([\'/detail/\'+this.route.snapshot.paramMap.get(\'key\')]);\r\n}</p><p>Finally, open and edit `src/app/edit/edit.page.html` then replace all HTML tags with this.</p><p>&lt;ion-header&gt;\r\n&nbsp; &lt;ion-toolbar&gt;\r\n&nbsp; &nbsp; &lt;ion-buttons slot=\"start\"&gt;\r\n&nbsp; &nbsp; &nbsp; &lt;ion-back-button&gt;&lt;/ion-back-button&gt;\r\n&nbsp; &nbsp; &lt;/ion-buttons&gt;\r\n&nbsp; &nbsp; &lt;ion-title&gt;Edit Info&lt;/ion-title&gt;\r\n&nbsp; &lt;/ion-toolbar&gt;\r\n&lt;/ion-header&gt;\r\n\r\n&lt;ion-content padding&gt;\r\n&nbsp; &lt;form [formGroup]=\"infoForm\"&gt;\r\n&nbsp; &nbsp; &lt;ion-item&gt;\r\n&nbsp; &nbsp; &nbsp; &lt;ion-label position=\"floating\"&gt;Info Title&lt;/ion-label&gt;\r\n&nbsp; &nbsp; &nbsp; &lt;ion-input type=\"text\" formControlName=\"info_title\"&gt;&lt;/ion-input&gt;\r\n&nbsp; &nbsp; &lt;/ion-item&gt;\r\n&nbsp; &nbsp; &lt;ion-item&gt;\r\n&nbsp; &nbsp; &nbsp; &lt;ion-label position=\"floating\"&gt;Info Description&lt;/ion-label&gt;\r\n&nbsp; &nbsp; &nbsp; &lt;ion-input type=\"text\" formControlName=\"info_description\"&gt;&lt;/ion-input&gt;\r\n&nbsp; &nbsp; &lt;/ion-item&gt;\r\n&nbsp; &nbsp; &lt;ion-button shape=\"round\" color=\"primary\" expand=\"block\" [disabled]=\"!infoForm.valid\" (click)=\"updateInfo()\"&gt;Update&lt;/ion-button&gt;\r\n&nbsp; &lt;/form&gt;\r\n&lt;/ion-content&gt;</p><h2><br><strong>Run and Test the Ionic 4, Angular 6, and Firebase Realtime App</strong></h2><p>This is the time to show what we have built so far. The Ionic 4, Angular 6 and Firebase CRUD mobile apps. Type this command to run this app in the browser.</p><p>ionic serve -l</p><p>And here we go, just test all of the CRUD function of this Ionic 4, Angular 6 and Firebase app.</p><p>&nbsp;</p><figure class=\"image\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/djamblog/article-160818085007.png\" alt=\"Ionic 4 and Angular 6 Tutorial: Firebase Realtime CRUD Mobile App - Info List\"></figure><p><br>&nbsp;</p><figure class=\"image\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/djamblog/article-160818085232.png\" alt=\"Ionic 4 and Angular 6 Tutorial: Firebase Realtime CRUD Mobile App - Create Info\"></figure><p><br>&nbsp;</p><figure class=\"image\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/djamblog/article-160818085428.png\" alt=\"Ionic 4 and Angular 6 Tutorial: Firebase Realtime CRUD Mobile App - Info Details\"></figure><p>To run on the device, type this series of commands.</p><p>ionic cordova platform rm android\r\nionic cordova platform add android\r\nionic cordova platform rm ios\r\nionic cordova platform add ios\r\nionic cordova run android\r\nionic cordova run ios</p><p>That it\'s, the Ionic 4, Angular 6 and Firebase CRUD mobile apps. You can get the working full source code in our <a href=\"https://github.com/didinj/ionic4-angular6-firebase-crud-example.git\">GitHub</a>.</p>', 2, 27, '2020-06-01', '2020-06-01', 'img/article/1591009844.png');
INSERT INTO `articles` (`id`, `title`, `description`, `text`, `category_id`, `user_id`, `created_at`, `updated_at`, `image`) VALUES
(15, 'Overclocking: Guia para novatos', 'El overclocking es una técnica que permite aumentar el rendimiento de algunos componentes del PC mediante el aumento de las frecuencias de trabajo de dichos componentes. El overclocking permite un aumento de rendimiento y es una técnica sencilla de usar pero que tiene algunas claves importantes para poderlo hacer de forma segura y de forma eficiente. El overclocking a diferencia de como se piensa no es algo que nos deba costar una inversión adicional y se puede realizar con todo tipo de ordenadores por barato que este sea. La única diferencia de usar unas piezas mas avanzadas que otras son los niveles de overclocking que conseguiremos.', '<p>El overclocking es una técnica que permite aumentar el rendimiento de algunos componentes del PC mediante el aumento de las frecuencias de trabajo de dichos componentes. El overclocking permite un aumento de rendimiento y es una técnica sencilla de usar pero que tiene algunas claves importantes para poderlo hacer de forma segura y de forma eficiente. El overclocking a diferencia de como se piensa no es algo que n<strong>El overclocking no es algo de ahora.</strong></p><p>El PC desde sus inicios funciona con un reloj interno que es susceptible de modificación. En los tiempos del 486 se inicia el sistema de reloj interno mediante el uso de un bus frontal y un multiplicador interno. Es entonces cuando se empieza a iniciar la tendencia del overclocking. Las herramientas eran limitadas pero mediante los famosos jumpers de la placa base podíamos hacer ciertas modificaciones al bus o a los multiplicadores del procesador. Desde aquel entonces la técnica de overclocking no se ha modificado, se ha avanzado en ello y ahora es mucho mas sencillo, pero la base sigue siendo la misma.</p><p>Es ya entrados en los tiempos del Pentium 2 de slots y en los celeron de socket 370 cuando el overclocking empieza a tener notable auge entre los aficionados al PC. Es por aquel entonces cuando aun los procesadores Intel venían liberados de multiplicador, no ya en los socket 370 pero si hasta algunos Pentium 2 de slot. Los chipsets de la época también eran bastante mas maleables que los hasta ahora existentes y algunas placas base se empiezan a preparar con mas configuraciones de jumpers.</p><p>&nbsp;</p><figure class=\"image\"><img src=\"https://acf.geeknetic.es/imgw/imagenes/tutoriales/167-1.gif?f=webp\"></figure><p>&nbsp;</p><p>Pero cuando se facilita el acceso al overclocking de forma generalizada, rápida y cómoda, es cuando Abit introduce la BH6, la primera placa base para Slot1 con configuración de bus frontal y otras opciones a través de la bios. Desde aquí se confirma la revolución de una tendencia \"underground\" que ha conseguido que todos nos planteemos o hagamos a diaria overclocking a nuestros procesadores. Ahora cualquier placa base del mercado, por barata que sea, incorpora en mayor o menor medida estas opciones de personalización en bios y disponen de sistemas de protección que evita que nos pasemos en nuestras configuraciones. La técnica que vamos a enseñaros sigue siendo la misma pero como veis los medios han cambiado.</p><p>&nbsp;</p><figure class=\"image\"><img src=\"https://acf.geeknetic.es/imgw/imagenes/tutoriales/167-1.jpg?f=webp\"></figure><p>&nbsp;</p><h2><strong>Las formas de overclocking</strong></h2><p><strong>Las formas de overclocking</strong></p><p>Como ya hemos comentado la frecuencia de un procesador viene definida por su bus frontal y por el multiplicador interno. Cualquier modificación en ambos parámetros hará cambiar la frecuencia de trabajo del procesador, su frecuencia real, que es la frecuencia interna del procesador. El aumento de multiplicador tiene ventajas evidentes, sobretodo en el pasado, ya que no requiere que modifiquemos ninguno de los otros buses secundarios que dependen del bus frontal. Aumentamos la frecuencia sin que ninguno de los otros componentes se vean afectados, solo el procesador se ve modificado.</p><p>Solo hay un problema. En procesadores Intel desde los tiempos del Pentium 2 y salvo versiones Extreme Edition y versiones de ingeniero no hay opción a modificar el multiplicador, no positivamente (subirlo) ya que algunos micros en algunas placas base Asus si que permitían reducir en una unidad el multiplicador interno del procesador. El caso de AMD es si cabe ahora mas dramático ya que no hay un solo procesador que permita el cambio de multiplicador positivo ni tan siquiera los modelos más caros.</p><p>Solo nos queda por tanto la opción de subir el bus si queremos aumentar la frecuencia de trabajo de nuestro procesador. Subir el bus frontal corre a cargo de la placa base y de la capacidad de dos componentes de la misma, el generador de reloj y el propio chipset de la placa base. Ahora estamos acostumbrados a ver placas base, desde las mas económicas, donde las opciones de aumento o cambio del bus son prácticamente milimétricas pero hace tiempo esto no existía y los cambios eran bruscos y solían llevar consigo problemas añadidos. Fue ABIT, una vez mas, quien introdujo el primer generador de reloj capaz de ajustarse de Mhz en MHz. Pero el generador de reloj no es mas que un instrumento con mayor o menor capacidad, el que luego tiene que hacerse cargo del aumento de velocidad es el chipset de la placa base y dependiendo de su calidad y potencial los resultados podrán ser mejores o peores.</p><p>&nbsp;</p><figure class=\"image\"><img src=\"https://acf.geeknetic.es/imgw/imagenes/tutoriales/167-2.jpg?f=webp\"></figure><p>&nbsp;</p><h2><strong>La importancia de los buses secundarios</strong></h2><p><strong>La importancia de los buses secundarios</strong></p><p>El bus frontal aumenta la velocidad de proceso interna de nuestro procesador pero también afecta a otros buses fundamentales para la estabilidad del sistema. Todos los buses secundarios dependen de una manera u otra del bus frontal del procesador. El AGP, el PCI, la memoria, los PCI Express....todos dependen del bus frontal del ordenador. Son siempre múltiplos o divisores de este bus y por tanto si aumentamos la velocidad de este bus las frecuencias de estos buses aumentan de forma proporcional. Ahora casi todas las placas disponen de bloqueadores de frecuencia para estos buses, por lo menos para los mas delicados como el del serial ATA o el PCI express pero antiguamente había que saber lidiar con este problemas y usar frecuencias de overclocking donde supiéramos que activábamos un divisor mas grande para mantener a los buses secundarios en su lugar.</p><p>Asi hasta los tiempos del Pentium 3 se buscaban los modelos de 66 o 100Mhz y se seleccionaban placas base que se sabia que a cierta frecuencia metían un divisor mayor para el AGP y el bus PCI para mantener la estabilidad. Un ejemplo muy llamativo de esto que os digo eran los procesadores Pentium 2 donde la gente se pegaba por los modelos de 66MHz de bus frontal como el 266o el 300MHz ya que se sabia que el chipset BX soportaba un bus de 100MHz activando un divisor de 3 para el PCI y manteniendo por tanto los buses secundarios en su lugar que era 33MHz para el PCI y 66MHz para el AGP. Si subíamos a 100MHz teníamos un aumento del 33% de la potencia del procesador y no teníamos ningún efecto secundario. Aun con estas pegas los que buscábamos niveles mas elevados buscábamos tarjetas que soportaran mayores frecuencias que las estándar como las nvidia y las tarjetas de sonido de Creative. Aun así el riesgo era grande porque el bus de datos de los discos duros también se veía afectado y si te pasabas conseguirías una bonita corrupción de datos y un disco duro inservible.</p><p>A la llegada del Serial ATA el problema se acrecentó ya que el serial ATA con tan solo un MHz mas de frecuencia se convierte en inviable. Desde entonces los fabricantes de placas introdujeron los divisores seleccionables y luego mas tarde el bloqueo completo de estos buses a cierta frecuencia. El problema del bus PCI o de los discos duros esta ahora erradicado en casi cualquier placa actual pero la memoria siempre seguirá dependiendo, por lo menos de momento, del bus frontal del ordenador.</p><p>&nbsp;</p><figure class=\"image\"><img src=\"https://acf.geeknetic.es/imgw/imagenes/tutoriales/167-3.jpg?f=webp\"></figure><p>&nbsp;</p><p>El bus de comunicación con la memoria no es otro que el bus frontal del procesador, se usan buses de diferentes capacidades y divisores intermedios para controlarla pero a dia de hoy no hay ninguna placa que controle de forma independiente ambas frecuencias. Sin embargo los divisores seleccionables en bios permiten controlar la frecuencia de las mismas sobretodo cuando aumentamos mucho la frecuencia del bus frontal. Muchos overclockers gastan cientos de euros en memorias capaces de alcanzar altas frecuencias pero esto no deja de ser un extra que podemos obviar si queremos resultados elevados de rendimiento sin tener que gastar ni un duro mas de lo que gastaríamos en nuestro pc aunque no quisiéramos hacer overclocking.</p><h2><strong>Placa, memoria, disipación y suerte</strong></h2><p>Ya hemos visto que el centro de cualquier overclocking no es el procesador, es la placa base. La placa base debe darnos seguridad, funciones y capacidad, sin ella no hay nada que hacer. Como ya he dicho cualquier placa actual esta mas preparada que la mejor de las placas de overclocking de hace unos años pero aun así sigue siendo el elemento mas importante. La memoria es, de facto, un elemento secundario que puede ofrecernos un puntito mas de rendimiento si la mantenemos sincronía con el bus del procesador pero al fin y al cabo es un elemento secundario.</p><p>Un punto muy importante es la disipación. El procesador cuanta mas frecuencia interna mas consumo de energía requiere y también mas vatios de calor genera. Si aumentamos mucho la frecuencia el aumento de temperatura será notable. Con esto no quiero decir que para hacer overclocking necesitemos un disipador de 60€ o un kit de refrigeración liquida, todo dependerá de hasta donde queramos llegar o de hasta donde nuestro procesador nos deje llegar.</p><p>El overclocking es un 10% experiencia, un 20% paciencia y un 70% suerte. Cada procesador es diferente, puede compartir con otros un proceso de fabricación, e incluso salir de la misma oblea pero cada uno de se comportara de una forma diferente y una serie que parezca fantástica puede obsequiarnos con un procesador muy limitado y una serie mala puede regalarnos un procesador fuera de serie. Aquí podemos seguirnos por la experiencia de otros usuarios pero al final solo nos quedara la suerte y como ya digo en el tema del overclocking es fundamental. Podemos tener las mejores piezas que si el procesador no quiere subir no subirá.</p><p>&nbsp;</p><figure class=\"image\"><img src=\"https://acf.geeknetic.es/imgw/imagenes/tutoriales/167-4.jpg?f=webp\"></figure><p>&nbsp;</p><p>En cuanto a los procesadores todos los micros son susceptibles de hacer overclocking en ellos. Si buscamos algo especial deberemos mirar sobretodo las prestaciones que buscamos del procesador y también su combinación de bus y multiplicador que mas se ajusta a nuestras necesidades. Un procesador con mucho bus pero poco multiplicador nos limitará mucho el aumento de frecuencias ya que necesitaremos un gran aumento del bus frontal para poder alcanzar cotas interesantes. Por otro lado un procesador con mucho multiplicador y poco bus, como por ejemplo el Pentium D 805 que tiene un bus de 133MHz reales y un multiplicador de 20x, hace que con la mas mínima subida las frecuencias reales se disparen. Lo mejor es buscar un equilibrio. Actualmente lo ideal, según el bus de 200MHz que se maneja actualmente en casi todos los procesadores y mirando también mucho de cara al Core 2 Duo y al AM2, lo ideal seria un multiplicador de 12x y un bus frontal de fabrica de 200MHz. Con esta combinación podemos llegar a overclockings extremos muy sorprendentes.</p><h2><strong>Voltajes, disipación...buscar el equilibrio</strong></h2><p>&nbsp;</p><p>Voltajes, disipación...buscar el equilibrio.</p><p>&nbsp;</p><p>Aumentar las frecuencias de cualquier componente lleva al consumo de mayor energía y por tanto a la generación de mas calor. Cuando consumimos mas energía podemos requerir mas corriente para mantener alimentado el procesador en estas nuevas condiciones. Cuanta corriente pasemos por los transistores del procesador mas calor generarán estos y por tanto mas capacidad de disipación necesitaremos. Dentro de esta combinación de factores: velocidad, corriente y energía a disipar, debemos encontrar el equilibrio para que nuestro procesador corra todo lo posible dentro de nuestras posibilidades de disipación y dentro de nuestras necesidades.</p><p>Algo debe quedaros claro y es que cuando aumentamos la frecuencia de trabajo del procesador, cuando subimos su voltaje y cuando aumentamos el calor que este produce estamos acortando su vida útil y si hacemos las cosas sin el debido cuidado, si nos saltamos las propias barreras que el procesador nos va marcando y no tenemos paciencia con un proceso que solo se rige mediante prueba y error, entonces podemos dañar nuestro procesador de forma irremediable. En toda mi experiencia haciendo overclocking a todo tipo de procesador jamás he visto un solo micro estropeado por el propio proceso pero si por cosas ajenas al mismo como disipadores mal montados, fugas de agua en sistema de refrigeración, mal aislamiento del procesador o placa en sistema de refrigeración bajo cero....en estos casos no fue el overclocking quien daño el procesador u otros componentes, fue sin duda la mala manipulación de los mismos.</p><p>&nbsp;</p><figure class=\"image\"><img src=\"https://acf.geeknetic.es/imgw/imagenes/tutoriales/167-5.jpg?f=webp\"></figure><p>&nbsp;</p><p>La variable preponderante en esta ecuación de equilibrio entre voltaje, disipación y velocidad es sin duda la disipación. Los componentes electrónicos agradecen las temperaturas mas reducidas posibles, funcionan mejor así, pero en los procesadores actuales la generación de calor es muy alta. Aunque parece que se vuelve al camino de la eficiencia por vatio de calor generado lo que es a día de hoy la temperatura es un factor fundamental. Por eso, como habéis podido ver en estas mismas paginas, cuando usamos un sistema que es capaz de dejar el procesador a temperaturas bajo cero las frecuencias que se alcanzan suelen ser en torno al 70% de overclocking cuando con un disipador convencional el limite suele rondar el 30%. Sabiendo esto es cuando debemos valorar si nos compensa gastarnos un dineral en un buen sistema de refrigeración o simplemente usar lo que tenemos para ganar todo lo posible a nuestra maquina sin tener que gastarnos ni un solo duro más.</p><h2><strong>El overclocking es asequible</strong></h2><p><strong>El overclocking es asequible</strong></p><p>No necesitamos de procesadores de 1000€ ni de sistemas de refrigeración de 800€ ni tan siquiera una placa base de 150€ para poder hacer un overclocking interesante. Sabiendo que tenemos que tocar y conociendo las condiciones de nuestra maquina podemos aumentar su frecuencia de trabajo sin que esto suponga ningún problema para ninguno de los componentes. Para ello vamos a ponernos un ejemplo de como llevaríamos nosotros a cabo el overclocking de un procesador Celeron 2800 con una placa base muy normalita como es una P4S61 de Asrock. Esta placa base, no siendo una asus de gama alta, si tiene funciones suficientes para que podamos trabajar con ella. Nuestro Celeron D 335 tiene una frecuencia de trabajo de 2800MHz con un multiplicador de 21x y un bus frontal de 133MHz. Es un bus pequeño y un multiplicador muy elevado por lo que cualquier aumento del mismo supondrá un aumento grande de su frecuencia.</p><p>Nuestra placa base tiene limitaciones, es una placa de 30€, y tenemos que tener en cuenta esas limitaciones. La principal de todas es que no bloquea bien los buses secundarios como el PCI y el AGP. La ventaja nos la pone el bus del procesador, que es de tan solo 133MHz, cuando la placa soporta micros de 200Mhz sin ningún problema, así que tenemos un techo alto que nos proporciona la placa base. Las memorias, 1GB en dos módulos de 512MB, también son DDR400 así que soportan hasta un bus de 200MHz sin ningún problema. La limitación la encontraremos en que no vamos a subir el voltaje del procesador en ningún momento, que ronda los 1.4v en este modelo, y que es un procesador basado en el núcleo Prescott y que por tanto se calienta bastante. Nosotros queremos llegar a lo máximo posible pero no tocaremos ninguno de los componentes, ni siquiera disipación y como ya hemos dicho, tampoco el voltaje del procesador. Así nos aseguramos de que el aumento de temperatura sea solo cuestión de la nueva frecuencia.</p><p>&nbsp;</p><figure class=\"image\"><img src=\"https://acf.geeknetic.es/imgw/imagenes/tutoriales/167-6.jpg?f=webp\"></figure><p>&nbsp;</p><p>Bloqueamos los buses como buenamente podemos, que los deja a una frecuencia razonable de 67MHz para el AGP y 34MHz para el PCI, y aumentamos el bus frontal hasta los 182MHz que nos proporciona el GHz más de frecuencia que buscábamos desde el principio. La temperatura de trabajo aumenta desde los 53º de la frecuencia de fabrica a los 57º de la nueva frecuencia, son temperaturas altas pero soportables por este tipo de procesador, es mas, son hasta bastante normales. Sin subir de voltaje ni gastar un duro mas en disipación llegamos hasta los 3800MHz gracias a un bus de 182MHz y un multiplicador de 21x. Quizás podríamos llegar a mas pero hemos marcado nuestro objetivo ahí, hemos probado que sea estable, ahora os decimos como, y estamos contentos con el resultado porque cumple nuestras expectativas para un micro de 50€ y una placa de 30€.</p><h2><strong>El proceso de verificar la estabilidad y el aumento de rendimiento</strong></h2><p><strong>El proceso de verificar la estabilidad y el aumento de rendimiento.</strong></p><p>Esto depende de nuestras necesidades, de nuestra forma de ver el overclocking y también de nuestro procesador. Lo normal es que ejecutemos una o varias tareas que usen el 100% de la CPU para estresarla durante largos periodos de tiempo y así asegurarnos de el procesador responderá antes las situaciones mas extremas de uso. Podemos usar test sintéticos como prime o programas 3D como 3Dmark, etc. Si nuestro procesador es de doble núcleo seria interesante que sometiéramos todo el procesador a estrés ejecutando diferentes aplicaciones en cada uno de los núcleos para que ambos trabajen al 100%.</p><p>Mi opinión personal a este respecto es que debemos probar el procesador con aquellas aplicaciones y procesos que vayamos a usar normalmente. Si lo que hacemos con el Pc es jugar lo mejor es que juguemos si lo usamos para crear video u otro tipo de contenidos multimedia la mejor prueba es trabajar con ello. Siempre podemos además combinar un poquito de estas dos técnicas para lograr un resultado ponderado. El caso es que el overclocking no debe suponer un problema de estabilidad. Por sacar 100Mhz mas no debemos en ningún caso jugar con la estabilidad del sistema porque lo que ganaremos por un lado lo perderemos por el otro.</p><p>Hacer overclocking en maquinas que no van a aprovechar ese aumento de rendimiento tiene poco sentido, para usar un office no necesitamos que el celeron de 2800 pase a 3800, de hecho nosotros devolveremos esta máquina a su estado normal tras finalizar las pruebas, pero nos sirve como ejemplo de lo que se puede llegar a hacer con las herramientas básicas actuales. El overclocking solo se aprovechará si utilizamos tareas que requerían mucho rendimiento de CPU y yo casi diría que es algo exclusivamente aprovechable para juegos y alguna otra tarea muy especificas.</p><p>&nbsp;</p><p>&nbsp;</p><figure class=\"image\"><img src=\"https://acf.geeknetic.es/imgw/imagenes/tutoriales/167-7.jpg?f=webp\"></figure><p>&nbsp;</p><h2><strong>Algunos resultados</strong></h2><p>Algunos resultados</p><p>Hemos realizado alguna prueba comparativa de rendimiento para que podáis ver la diferencia de rendimiento que logramos con un nivel de overclocking como este que llega hasta el 35%. Una de estas pruebas es el archiconocido SuperPI pero en esta ocasión no veréis tiempos record pero si los tiempos comparados de este mismo procesador sin el overclocking y con el overclocking.</p><p>&nbsp;</p><figure class=\"image\"><img src=\"https://acf.geeknetic.es/imgw/imagenes/tutoriales/167-9.jpg?f=webp\"></figure><p>&nbsp;</p><p>La diferencia de rendimiento alcanza mas del 60%, toda una ganancia para este celeron pero no deja de ser anecdótico ya que los records actuales andan sobre los 15s en procesadores Conroe y merom, que aun no se comercializan, y con overclocking extremo.</p><p>&nbsp;</p><p><strong>Conclusión</strong></p><p>Ahora ya sabéis como funciona y cuales son los principales conceptos que se manejan cuando hacemos cualquier tipo de overclocking a un procesador. Durante próximos artículos profundizaremos en este tema, veremos los diferentes sistemas de refrigeración, que hacen diferente a una placa base de overclocking de otra cualquiera, veremos como elegir las memorias mas adecuadas y optimizaremos el sistema para que a parte de rápida nuestra maquina sea silenciosa.</p>', 3, 27, '2020-06-01', '2020-06-01', 'img/article/1591010268.jpg');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `categories`
--

CREATE TABLE `categories` (
  `category_id` int(11) NOT NULL,
  `name` varchar(22) NOT NULL,
  `parentId` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Volcado de datos para la tabla `categories`
--

INSERT INTO `categories` (`category_id`, `name`, `parentId`) VALUES
(1, 'systems', NULL),
(2, 'develop', NULL),
(3, 'hardware', NULL),
(4, 'hacking', NULL),
(5, 'consoles', NULL),
(6, 'mobiles', NULL),
(7, 'network', NULL),
(8, 'windows', 1),
(9, 'ubuntu', 1),
(10, 'centos', 1),
(11, 'php', 2),
(12, 'css', 2);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `users`
--

CREATE TABLE `users` (
  `user_id` int(255) NOT NULL,
  `name` varchar(50) NOT NULL,
  `surname` varchar(100) DEFAULT NULL,
  `role` varchar(20) DEFAULT NULL,
  `email` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  `description` text DEFAULT NULL,
  `image` varchar(255) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `remember_token` varchar(255) DEFAULT NULL,
  `activated` tinyint(1) NOT NULL DEFAULT 0
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Volcado de datos para la tabla `users`
--

INSERT INTO `users` (`user_id`, `name`, `surname`, `role`, `email`, `password`, `description`, `image`, `created_at`, `updated_at`, `remember_token`, `activated`) VALUES
(5, 'Abri', 'nsnds', 'ROLE_USER', 'asdsa@dsl.es', '609241098870dc3710e276a51dc1d4a6640d70f9adae5663cd7e3f4973ab6ba3', NULL, NULL, '2020-04-10 16:12:50', '2020-04-10 16:12:50', NULL, 0),
(27, 'marta', 'iglesias', 'ROLE_USER', 'marta@gmail.com', '$2y$10$re4O94usttADjbGZqdNmCOvoFWFptRUwXbIdgrGeZAQ7bwoX9K49O', NULL, 'img/avatar/1590965623.png', '2020-05-30 11:40:31', '2020-05-31 22:53:43', 'KHPIQbu2LdqJKoiUCz5OXflgmwOill75aW9RrvhRSEKCW0RxIoNMpAzDVlZ4', 0),
(28, 'Paco', 'Pacoco', 'ROLE_USER', 'paco@gmail.com', '$2y$10$z56d1xE2Dlb3uOzNCBDN/ePfHYKxm1QiewUDYuOdowRpEnU2kJDWG', NULL, 'img/avatar/1591010841.PNG', '2020-06-01 11:26:53', '2020-06-01 11:27:21', NULL, 0);

--
-- Índices para tablas volcadas
--

--
-- Indices de la tabla `articles`
--
ALTER TABLE `articles`
  ADD PRIMARY KEY (`id`),
  ADD KEY `category_id` (`category_id`),
  ADD KEY `user_id` (`user_id`);

--
-- Indices de la tabla `categories`
--
ALTER TABLE `categories`
  ADD PRIMARY KEY (`category_id`);

--
-- Indices de la tabla `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`user_id`);

--
-- AUTO_INCREMENT de las tablas volcadas
--

--
-- AUTO_INCREMENT de la tabla `articles`
--
ALTER TABLE `articles`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=16;

--
-- AUTO_INCREMENT de la tabla `categories`
--
ALTER TABLE `categories`
  MODIFY `category_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=14;

--
-- AUTO_INCREMENT de la tabla `users`
--
ALTER TABLE `users`
  MODIFY `user_id` int(255) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=29;

--
-- Restricciones para tablas volcadas
--

--
-- Filtros para la tabla `articles`
--
ALTER TABLE `articles`
  ADD CONSTRAINT `articles_ibfk_1` FOREIGN KEY (`category_id`) REFERENCES `categories` (`category_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `articles_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`) ON DELETE NO ACTION ON UPDATE NO ACTION;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
